{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","clearState","this","className","styles","onSubmit","htmlFor","label","id","input1","type","onChange","pattern","input2","button","Component","Filter","onChangeFilter","filter","ContactList","contacts","onDeleteContact","list","map","key","onClick","App","filterContacts","contact","toLowerCase","includes","changeFilter","isAlreadyAdded","find","item","addContact","contactToAdd","uuid","alert","deleteContact","JSON","parse","localStorage","getItem","length","prevState","setItem","stringify","filteredContacts","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c164319.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"label\":\"ContactForm_label__378f8\",\"button\":\"ContactForm_button__1MLZK\",\"input1\":\"ContactForm_input1__2gn4K\",\"input2\":\"ContactForm_input2__-FHK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name && this.state.number) {\n      this.props.onAddContact({ ...this.state });\n    }\n    this.clearState();\n  };\n\n  clearState = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\" className={styles.label}>\n          Name\n          <input\n            id=\"name\"\n            className={styles.input1}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <input\n            pattern=\"[0-9]+$\"\n            id=\"number\"\n            className={styles.input2}\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ onChangeFilter }) => {\n  return (\n    <label htmlFor=\"filter\">\n      Find contacts by name\n      <input\n        id=\"filter\"\n        className={styles.filter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <ul className={styles.list}>\n            {contacts.map(({id, name, number}) => (\n            <li key={id}>\n              <button className={styles.button} type='button' onClick={() => onDeleteContact(id)}>Delete</button>\n              {name}: {number}\n            </li>\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n  export default ContactList;","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  isAlreadyAdded = (contact, contacts) =>\n    contacts.find(item =>\n      item.name.toLowerCase().includes(contact.name.toLowerCase()),\n    );\n\n  addContact = contact => {\n    const { contacts } = this.state;\n\n    const contactToAdd = {\n      ...contact,\n      id: uuid(),\n    };\n\n    !this.isAlreadyAdded(contact, contacts)\n      ? this.setState(state => ({\n          contacts: [...state.contacts, contactToAdd],\n        }))\n      : alert(`${contact.name} is already added to the contact list`);\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts && contacts.length > 0) {\n      this.setState({ contacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.app}>\n        <h2>Phonebook</h2>\n        <ContactForm onAddContact={this.addContact} />\n        {contacts.length > 0 && (\n          <>\n            <h2>Contacts</h2>\n            {contacts.length >= 2 && (\n              <Filter onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1RuFy\",\"list\":\"ContactList_list__2T7aG\"};"],"sourceRoot":""}